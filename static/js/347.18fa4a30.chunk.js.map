{"version":3,"file":"static/js/347.18fa4a30.chunk.js","mappings":"6JAEO,MAAMA,E,QAAYC,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kM,aCElC,MAIA,EAJuCC,IAAgB,IAAf,MAAEC,GAAOD,EAC/C,OAAOE,EAAAA,EAAAA,KAACP,EAAS,CAAAQ,SAAEF,GAAkB,C,4DCAvC,MAkBA,EAlBkED,IAG3D,IAH4D,MACjEI,EAAK,SACLC,GACDL,EACC,OACEM,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOK,KAAK,OAAOC,KAAK,aACxBF,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOK,KAAK,OAAOC,KAAK,WACxBN,EAAAA,EAAAA,KAAA,SAAOK,KAAK,OAAOC,KAAK,WACxBN,EAAAA,EAAAA,KAAA,UAAQM,KAAK,cACbN,EAAAA,EAAAA,KAAA,UAAQM,KAAK,UACbN,EAAAA,EAAAA,KAAA,UAAQM,KAAK,UAEX,E,cCjBV,MAwCA,EAxCgCC,KAC9B,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,GAE3C,OACEN,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAV,SAAA,EACEG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBACJG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,UACEY,QAASA,KACPH,GAASI,GAAQA,EAAO,GAAE,EAC1BZ,SACH,OAGDD,EAAAA,EAAAA,KAAA,QAAAC,SAAOO,KACPR,EAAAA,EAAAA,KAAA,UACEY,QAASA,KACPH,GAASI,GACM,IAATA,EAAmBA,EAChBA,EAAO,GACd,EACFZ,SACH,aAKLD,EAAAA,EAAAA,KAAA,MAAAC,UAEEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,UAAQM,KAAK,gBACbN,EAAAA,EAAAA,KAAA,UAAQM,KAAK,YACbN,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,kBAGX,EC7BP,EATgCa,KAE5BV,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAV,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wBACJD,EAAAA,EAAAA,KAAA,YAAUM,KAAK,SAASS,YAAY,eAAeC,UAAQ,O,cCKjE,MAuBA,EAvB0BC,KACxB,MACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoBC,IACxBA,EAAEC,iBAEFJ,EAAS,MAAM,EAGjB,OACEd,EAAAA,EAAAA,MAAA,QAAMD,SAAUiB,EAAiBnB,SAAA,EAC/BD,EAAAA,EAAAA,KAACuB,EAAuB,CACtBrB,MAZc,OAadC,SAAUiB,KAEZpB,EAAAA,EAAAA,KAACO,EAAuB,KACxBP,EAAAA,EAAAA,KAACc,EAAuB,KACxBd,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAAQJ,SAAC,UACjB,E,cCzBX,MAWA,EAXuBuB,KAEnBxB,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAV,UACEG,EAAAA,EAAAA,MAAA,WAAAH,SAAA,EACED,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAC1B,MAAO,gBAClBC,EAAAA,EAAAA,KAACiB,EAAa,Q","sources":["components/MainTitle/MainTitle.styled.tsx","components/MainTitle/MainTitle.tsx","components/AddRecipe/RecipeDescriptionFields/RecipeDescriptionFields.tsx","components/AddRecipe/RecipeIngredientsFields/RecipeIngredientsFields.tsx","components/AddRecipe/RecipePreparationFields/RecipePreparationFields.tsx","components/AddRecipe/AddRecipeForm/AddRecipeForm.tsx","pages/AddRecipesPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  font-weight: 600;\n  font-size: 28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 44px;\n  }\n`;\n","import { FC } from 'react';\nimport { IMainTitleProps } from './mainTitleTypes';\nimport { PageTitle } from './MainTitle.styled';\n\nconst MainTitle: FC<IMainTitleProps> = ({ title }) => {\n  return <PageTitle>{title}</PageTitle>;\n};\n\nexport default MainTitle;\n","import { FC } from 'react';\nimport { RecipeDescriptionFieldsProps } from '../addRecipeTypes';\n\n// time 5mins-120mins. Interval 5mins\n// selects must have visible 6 options, other scroll\nconst RecipeDescriptionFields: FC<RecipeDescriptionFieldsProps> = ({\n  value,\n  onSubmit,\n}) => {\n  return (\n    <div>\n      <input type=\"file\" name=\"picture\" />\n      <div>\n        <input type=\"text\" name=\"title\" />\n        <input type=\"text\" name=\"about\" />\n        <select name=\"category\"></select>\n        <select name=\"time\"></select>\n        <select name=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeDescriptionFields;\n","import { useState } from 'react';\n\nconst RecipeIngredientsFields = () => {\n  const [count, setCount] = useState<number>(3);\n\n  return (\n    <>\n      <div>\n        <h3>Ingredients</h3>\n        <div>\n          <button\n            onClick={() => {\n              setCount(prev => prev + 1);\n            }}\n          >\n            -\n          </button>\n          <span>{count}</span>\n          <button\n            onClick={() => {\n              setCount(prev => {\n                if (prev === 1) return prev;\n                return prev - 1;\n              });\n            }}\n          >\n            +\n          </button>\n        </div>\n      </div>\n      <ul>\n        {/* Create Item component and map in ul */}\n        <li>\n          <select name=\"ingredient\"></select>\n          <select name=\"weight\"></select>\n          <button>delete</button>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default RecipeIngredientsFields;\n","const RecipePreparationFields = () => {\n  return (\n    <>\n      <h3>Recipe Preparation</h3>\n      <textarea name=\"recipe\" placeholder=\"Enter recipe\" required />\n    </>\n  );\n};\n\nexport default RecipePreparationFields;\n","import RecipeDescriptionFields from 'components/AddRecipe/RecipeDescriptionFields';\nimport RecipeIngredientsFields from 'components/AddRecipe/RecipeIngredientsFields';\nimport RecipePreparationFields from 'components/AddRecipe/RecipePreparationFields';\nimport { FC, FormEvent } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n//TODO install React-Select\n// містить стейт => зберігаються заповнені у формі  дані\n// всі поля required, валідуються. Інфа якщо значення невалідне\nconst AddRecipeForm: FC = () => {\n  const inputValues = 'test';\n  const navigate = useNavigate();\n\n  const handleFormSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    navigate('/my');\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <RecipeDescriptionFields\n        value={inputValues}\n        onSubmit={handleFormSubmit}\n      />\n      <RecipeIngredientsFields />\n      <RecipePreparationFields />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default AddRecipeForm;\n","import AddRecipeForm from 'components/AddRecipe';\nimport MainTitle from 'components/MainTitle/MainTitle';\n\nconst AddRecipesPage = () => {\n  return (\n    <>\n      <section>\n        <MainTitle title={'Add recipe'} />\n        <AddRecipeForm />\n      </section>\n    </>\n  );\n};\n\nexport default AddRecipesPage;\n"],"names":["PageTitle","styled","h2","_templateObject","_taggedTemplateLiteral","_ref","title","_jsx","children","value","onSubmit","_jsxs","type","name","RecipeIngredientsFields","count","setCount","useState","_Fragment","onClick","prev","RecipePreparationFields","placeholder","required","AddRecipeForm","navigate","useNavigate","handleFormSubmit","e","preventDefault","RecipeDescriptionFields","AddRecipesPage","MainTitle"],"sourceRoot":""}