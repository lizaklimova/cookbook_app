{"version":3,"file":"static/js/211.df1c69bc.chunk.js","mappings":"6JAEO,MAAMA,E,QAAYC,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kM,aCElC,MAIA,EAJuCC,IAAgB,IAAf,MAAEC,GAAOD,EAC/C,OAAOE,EAAAA,EAAAA,KAACP,EAAS,CAAAQ,SAAEF,GAAkB,C,+FCGhBL,EAAAA,GAAOQ,IAAGN,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAA1B,MAMMM,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAYW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oDAKzBS,GAAcZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAac,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6tBA+B3BY,EAAef,EAAAA,GAAOgB,OAAMC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kqBAQnBC,IAAA,IAAC,UAAEc,EAAS,OAAEC,GAAQf,EAAA,MAC1B,UAAdc,GAAoC,UAAXC,EACrB,cACA,oBAAoB,IAKJC,IAAA,IAAC,UAAEF,EAAS,OAAEC,GAAQC,EAAA,MAC1B,UAAdF,GAAoC,UAAXC,EACrB,qBACA,aAAa,IACTE,IAAA,IAAC,OAAEF,GAAQE,EAAA,MACR,UAAXF,EAAqB,OAAS,4BAA4B,I,2CC9DhE,MA6CA,EA7CuBG,KACrB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACZ,SAAEC,IAAaC,EAAAA,EAAAA,MACfC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GACpBC,GAAWC,EAAAA,EAAAA,MAcjB,OACE3B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAA3B,UACED,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CAACC,cAAe,CAAEC,YAAa,IAAMC,SAd3BC,KACF,UAAbd,GAAwBI,EAAMW,QAChCb,EAAS,WAGXc,QAAQC,IAAIb,EAAM,EASmDtB,UACjEoC,EAAAA,EAAAA,MAAClC,EAAU,CAAAF,SAAA,EACTD,EAAAA,EAAAA,KAACM,EAAW,CACVgC,MAAOf,EACPgB,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,QACZC,SAfYC,IACpBnB,GAASoB,EAAAA,EAAAA,IAAwBD,EAAME,OAAOT,MAAMU,QAAQ,KAgBtDhD,EAAAA,EAAAA,KAACS,EAAY,CACXI,OAAkB,SAAVI,EAAmB,OAAS,QACpCL,UAAWO,EACXqB,KAAK,SAAQvC,SACd,iBAKJ,C,0FC9CP,MAyBA,EAzBiBgD,KACf,MACEC,MAAM,KAAEX,GAAM,WACdY,EAAU,eACVC,IACEC,EAAAA,EAAAA,KAiBJ,OAfAC,EAAAA,EAAAA,YAAU,KACR,GAAIH,IAAeC,EAAgB,CACjC,MAAMG,EAAqB,CACzBC,KAAM,6CACNC,MAAO,CACLC,aAAc,OACdC,WAAY,UACZC,MAAO,UAIXC,EAAAA,EAAAA,IAAM,YAADC,OAAavB,EAAI,iBAAOgB,EAC/B,IACC,CAAChB,EAAMY,EAAYC,KAEfpD,EAAAA,EAAAA,KAAA,SAAuC,E,wBCrBhD,MAUA,EAVqB+D,KAEjB1B,EAAAA,EAAAA,MAAA,OAAApC,SAAA,EACED,EAAAA,EAAAA,KAACiD,EAAI,KACLjD,EAAAA,EAAAA,KAACgE,EAAAA,EAAS,CAACjE,MAAO,uBAClBC,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,M,0CCRV,MAAMS,EAAqBwC,GAAqBA,EAAMC,OAAOnC,YAEvDoC,EAAoBF,GAAqBA,EAAMC,OAAOE,U","sources":["components/MainTitle/MainTitle.styled.tsx","components/MainTitle/MainTitle.tsx","components/SearchForm/SearchForm.styled.tsx","components/SearchForm/SearchForm.tsx","components/Main/Main.tsx","pages/MainPage.tsx","redux/search/selectors.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  font-weight: 600;\n  font-size: 28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 44px;\n  }\n`;\n","import { FC } from 'react';\nimport { IMainTitleProps } from './mainTitleTypes';\nimport { PageTitle } from './MainTitle.styled';\n\nconst MainTitle: FC<IMainTitleProps> = ({ title }) => {\n  return <PageTitle>{title}</PageTitle>;\n};\n\nexport default MainTitle;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\ninterface SearchButtonProps {\n  $theme: 'light' | 'dark';\n  $pathname: string;\n}\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n`;\n\nexport const SearchInput = styled(Field)`\n  width: 295px;\n  height: 53px;\n  border-radius: calc(0.35 * 53px) calc(0.65 * 53px);\n  border: 1px solid var(--heroInput);\n  padding: 16px calc(16px + 113px) 16px 32px;\n  font-size: 12px;\n  background-color: inherit;\n  color: inherit;\n\n  &::placeholder {\n    color: #3e4462;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 362px;\n    height: 57px;\n    border-radius: calc(0.35 * 57px) calc(0.65 * 57px);\n    padding: 18px calc(18px + 161px) 18px 38px;\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 510px;\n    height: 70px;\n    border-radius: calc(0.35 * 70px) calc(0.65 * 70px);\n    padding: 22px calc(22px + 161px) 22px 48px;\n    font-size: 16px;\n  }\n`;\n\nexport const SearchButton = styled.button<SearchButtonProps>`\n  margin-left: -113px;\n  width: 113px;\n  height: 53px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: calc(0.35 * 53px) calc(0.65 * 53px);\n  background-color: ${({ $pathname, $theme }) =>\n    $pathname === '/main' && $theme === 'light'\n      ? 'var(--dark)'\n      : 'var(--accentGreen)'};\n  color: var(--light);\n  transition: all var(--easedTransition);\n\n  &:hover {\n    background-color: ${({ $pathname, $theme }) =>\n      $pathname === '/main' && $theme === 'light'\n        ? 'var(--accentGreen)'\n        : 'var(--dark)'};\n    border: ${({ $theme }) =>\n      $theme === 'light' ? 'none' : '1px solid var(--heroInput)'};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 161px;\n    height: 57px;\n    border-radius: calc(0.35 * 57px) calc(0.65 * 57px);\n    margin-left: -161px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 161px;\n    height: 70px;\n    border-radius: calc(0.35 * 70px) calc(0.65 * 70px);\n  }\n`;\n","import { ChangeEvent, FC } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport useTheme from 'hooks/useTheme';\nimport { SearchButton, SearchInput, StyledForm } from './SearchForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSearchQuery } from '../../redux/search/selectors';\nimport { updateSearchQueryAction } from '../../redux/search/slice';\n\nconst SearchForm: FC = () => {\n  const { theme } = useTheme();\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const query = useSelector(selectSearchQuery);\n  const dispatch = useDispatch();\n\n  const handleSearch = () => {\n    if (pathname === '/main' && query.length) {\n      navigate('/search');\n    }\n\n    console.log(query);\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(updateSearchQueryAction(event.target.value.trim()));\n  };\n\n  return (\n    <>\n      <Formik initialValues={{ searchQuery: '' }} onSubmit={handleSearch}>\n        <StyledForm>\n          <SearchInput\n            value={query}\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Vegan\"\n            onChange={handleChange}\n          />\n          <SearchButton\n            $theme={theme === 'dark' ? 'dark' : 'light'}\n            $pathname={pathname}\n            type=\"submit\"\n          >\n            Search\n          </SearchButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import { FC, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport useAuth from 'hooks/useAuth';\n\nconst Main: FC = () => {\n  const {\n    user: { name },\n    isLoggedIn,\n    isPageReloaded,\n  } = useAuth();\n\n  useEffect(() => {\n    if (isLoggedIn && !isPageReloaded) {\n      const welcomeToasterOpts = {\n        icon: 'üë®üèª‚Äçüç≥',\n        style: {\n          borderRadius: '10px',\n          background: '#8BAA36',\n          color: '#fff',\n        },\n      };\n\n      toast(`Welcome, ${name} üíö`, welcomeToasterOpts);\n    }\n  }, [name, isLoggedIn, isPageReloaded]);\n\n  return <div>{/* —Ü–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∞, –¥–µ —Ö—ñ—Ä–æ */}</div>;\n};\n\nexport default Main;\n","import { FC } from 'react';\nimport Main from 'components/Main';\nimport MainTitle from 'components/MainTitle/MainTitle';\nimport SearchForm from 'components/SearchForm';\n\nconst MainPage: FC = () => {\n  return (\n    <div>\n      <Main />\n      <MainTitle title={\"I'm the main page\"} />\n      <SearchForm />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { RootState } from 'redux/store';\n\nexport const selectSearchQuery = (state: RootState) => state.search.searchQuery;\n\nexport const selectSearchType = (state: RootState) => state.search.searchType;\n"],"names":["PageTitle","styled","h2","_templateObject","_taggedTemplateLiteral","_ref","title","_jsx","children","div","StyledForm","Form","_templateObject2","SearchInput","Field","_templateObject3","SearchButton","button","_templateObject4","$pathname","$theme","_ref2","_ref3","SearchForm","theme","useTheme","pathname","useLocation","navigate","useNavigate","query","useSelector","selectSearchQuery","dispatch","useDispatch","_Fragment","Formik","initialValues","searchQuery","onSubmit","handleSearch","length","console","log","_jsxs","value","name","type","autoComplete","autoFocus","placeholder","onChange","event","updateSearchQueryAction","target","trim","Main","user","isLoggedIn","isPageReloaded","useAuth","useEffect","welcomeToasterOpts","icon","style","borderRadius","background","color","toast","concat","MainPage","MainTitle","state","search","selectSearchType","searchType"],"sourceRoot":""}