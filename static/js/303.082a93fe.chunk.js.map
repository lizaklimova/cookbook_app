{"version":3,"file":"static/js/303.082a93fe.chunk.js","mappings":"uKASA,MAkBA,EAlBkEA,IAG3D,IAH4D,MACjEC,EAAK,SACLC,GACDF,EACC,OACEG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,aACxBJ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,WACxBF,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,WACxBF,EAAAA,EAAAA,KAAA,UAAQE,KAAK,cACbF,EAAAA,EAAAA,KAAA,UAAQE,KAAK,UACbF,EAAAA,EAAAA,KAAA,UAAQE,KAAK,UAEX,E,aCrBV,MAwCA,EAxCgCC,KAC9B,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,GAE3C,OACER,EAAAA,EAAAA,MAAAS,EAAAA,SAAA,CAAAR,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEQ,QAASA,KACPH,GAASI,GAAQA,EAAO,GAAE,EAC1BV,SACH,OAGDC,EAAAA,EAAAA,KAAA,QAAAD,SAAOK,KACPJ,EAAAA,EAAAA,KAAA,UACEQ,QAASA,KACPH,GAASI,GACM,IAATA,EAAmBA,EAChBA,EAAO,GACd,EACFV,SACH,aAKLC,EAAAA,EAAAA,KAAA,MAAAD,UAEED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQE,KAAK,gBACbF,EAAAA,EAAAA,KAAA,UAAQE,KAAK,YACbF,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAGX,EC7BP,EATgCW,KAE5BZ,EAAAA,EAAAA,MAAAS,EAAAA,SAAA,CAAAR,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,YAAUE,KAAK,SAASS,YAAY,eAAeC,UAAQ,O,aCKjE,MAuBA,EAvB0BC,KACxB,MACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoBC,IACxBA,EAAEC,iBAEFJ,EAAS,MAAM,EAGjB,OACEhB,EAAAA,EAAAA,MAAA,QAAMD,SAAUmB,EAAiBjB,SAAA,EAC/BC,EAAAA,EAAAA,KAACmB,EAAuB,CACtBvB,MAZc,OAadC,SAAUmB,KAEZhB,EAAAA,EAAAA,KAACG,EAAuB,KACxBH,EAAAA,EAAAA,KAACU,EAAuB,KACxBV,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,UACjB,EClBX,EAJuCJ,IAAgB,IAAf,MAAEyB,GAAOzB,EAC/C,OAAOK,EAAAA,EAAAA,KAAA,MAAAD,SAAKqB,GAAW,ECOzB,EAXuBC,KAEnBrB,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAR,UACED,EAAAA,EAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACsB,EAAS,CAACF,MAAO,gBAClBpB,EAAAA,EAAAA,KAACa,EAAa,Q","sources":["components/AddRecipe/RecipeDescriptionFields/RecipeDescriptionFields.tsx","components/AddRecipe/RecipeIngredientsFields/RecipeIngredientsFields.tsx","components/AddRecipe/RecipePreparationFields/RecipePreparationFields.tsx","components/AddRecipe/AddRecipeForm/AddRecipeForm.tsx","components/MainTitle/MainTitle.tsx","pages/AddRecipesPage.tsx"],"sourcesContent":["import { FC, FormEvent } from 'react';\n\ninterface RecipeDescriptionFieldsProps {\n  value: string;\n  onSubmit: (e: FormEvent, data: unknown) => void;\n}\n\n// time 5mins-120mins. Interval 5mins\n// selects must have visible 6 options, other scroll\nconst RecipeDescriptionFields: FC<RecipeDescriptionFieldsProps> = ({\n  value,\n  onSubmit,\n}) => {\n  return (\n    <div>\n      <input type=\"file\" name=\"picture\" />\n      <div>\n        <input type=\"text\" name=\"title\" />\n        <input type=\"text\" name=\"about\" />\n        <select name=\"category\"></select>\n        <select name=\"time\"></select>\n        <select name=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeDescriptionFields;\n","import { useState } from 'react';\n\nconst RecipeIngredientsFields = () => {\n  const [count, setCount] = useState<number>(3);\n\n  return (\n    <>\n      <div>\n        <h3>Ingredients</h3>\n        <div>\n          <button\n            onClick={() => {\n              setCount(prev => prev + 1);\n            }}\n          >\n            -\n          </button>\n          <span>{count}</span>\n          <button\n            onClick={() => {\n              setCount(prev => {\n                if (prev === 1) return prev;\n                return prev - 1;\n              });\n            }}\n          >\n            +\n          </button>\n        </div>\n      </div>\n      <ul>\n        {/* Create Item component and map in ul */}\n        <li>\n          <select name=\"ingredient\"></select>\n          <select name=\"weight\"></select>\n          <button>delete</button>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default RecipeIngredientsFields;\n","const RecipePreparationFields = () => {\n  return (\n    <>\n      <h3>Recipe Preparation</h3>\n      <textarea name=\"recipe\" placeholder=\"Enter recipe\" required />\n    </>\n  );\n};\n\nexport default RecipePreparationFields;\n","import RecipeDescriptionFields from 'components/AddRecipe/RecipeDescriptionFields';\nimport RecipeIngredientsFields from 'components/AddRecipe/RecipeIngredientsFields';\nimport RecipePreparationFields from 'components/AddRecipe/RecipePreparationFields';\nimport { FC, FormEvent } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n//TODO install React-Select\n// містить стейт => зберігаються заповнені у формі  дані\n// всі поля required, валідуються. Інфа якщо значення невалідне\nconst AddRecipeForm: FC = () => {\n  const inputValues = 'test';\n  const navigate = useNavigate();\n\n  const handleFormSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    navigate('/my');\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <RecipeDescriptionFields\n        value={inputValues}\n        onSubmit={handleFormSubmit}\n      />\n      <RecipeIngredientsFields />\n      <RecipePreparationFields />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default AddRecipeForm;\n","import { FC } from 'react';\n\ninterface IMainTitleProps {\n  title: string;\n}\n\nconst MainTitle: FC<IMainTitleProps> = ({ title }) => {\n  return <h2>{title}</h2>;\n};\n\nexport default MainTitle;\n","import AddRecipeForm from 'components/AddRecipe';\nimport MainTitle from 'components/MainTitle/MainTitle';\n\nconst AddRecipesPage = () => {\n  return (\n    <>\n      <section>\n        <MainTitle title={'Add recipe'} />\n        <AddRecipeForm />\n      </section>\n    </>\n  );\n};\n\nexport default AddRecipesPage;\n"],"names":["_ref","value","onSubmit","_jsxs","children","_jsx","type","name","RecipeIngredientsFields","count","setCount","useState","_Fragment","onClick","prev","RecipePreparationFields","placeholder","required","AddRecipeForm","navigate","useNavigate","handleFormSubmit","e","preventDefault","RecipeDescriptionFields","title","AddRecipesPage","MainTitle"],"sourceRoot":""}